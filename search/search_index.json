{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welkom","text":"<p>Deze website legt stap voor stap uit hoe je zelf systemen kan automatiseren.</p> <p>Enkele voorbeelden zijn:</p> <ul> <li>een magneet laten zweven</li> <li>een inbreker alarm</li> <li>een weerstation</li> </ul>"},{"location":"arduino/1_introductie/","title":"Introductie","text":""},{"location":"arduino/1_introductie/#layout-pins-en-leds","title":"Layout: Pins en leds","text":"<p>Een standaard arduino UNO bord ziet er als volgt uit</p> <p></p> <p>De zwarte vakjes zijn wat we pins noemen. Hier kan je draden aan verbinden die dan een elektrische kring kunnen maken. De pins zijn gegroepeerd in verschillende soorten: Power, Analog In en Digital. Van de aanduiding (~PWM) moeten we ons voorlopig niks aantrekken.</p> <p>Naast de pins zijn er ook enkele LED lampjes (L, TX, RX, ON). ON zal altijd branden vanaf je op 'Simulatie starten' duwt. L is de interne LED van de arduino en kan je laten branden met een code-blok `ingebouwde LED instellen op HOOG``. TX en RX zijn voorlopig nog niet belangrijk.</p>"},{"location":"arduino/1_introductie/#code","title":"Code","text":"<p>Het speciale aan arduino is dat we kunnen programmeren wat er met de pins en leds gebeurd. Dit doen we met behulp van blokken die zeer gelijkaardig zijn aan hoe je Scratch programeert.  </p> <p>Als je een nieuwe arduino toevoegt aan je project, zal deze automatisch reeds een klein stukje code bevatten. Dit stukje zorgt ervoor dat de interne LED (L) van de arduino zal knipperen vanaf we op 'simulatie starten' duwen.</p> <p></p> <ul> <li> <p><code>Bij starten</code>: Alles wat in dit blokje zit wordt maar 1 keer uitgevoerd, op het moment dat de arduino opstart. Dit kan bijvoorbeeld handig zijn om een geluid signaal te laten horen vanaf het systeem aan staat.</p> </li> <li> <p><code>Voor altijd</code>: Alles wat in dit blokje zit wordt oneindig vaak uitgevoerd. Als het laatste blokje is uitgevoerd, begin je dus terug met het eerste blokje. Dit gaat door tot de arduino uitgetrokken wordt.</p> </li> <li> <p><code>ingebouwde LED instellen op HOOG</code>: Met deze blok kan je de ingebouwde LED HOOG of LAAG zetten. Hoog betekent dat de LED zal branden, LAAG betekend dat de led niet zal branden. </p> </li> <li> <p><code>1 seconden wachten</code>: Met deze blok kan je een variabel aantal seconden (of milliseconden) wachten. Zo kan je bijvoorbeeld een lamp voor 4 seconden laten branden door eerst de LED HOOG te zetten en vervolgens te wachten.</p> </li> </ul> <p>Oefening 1: Opstart</p> <p>Laat de led eerst 4 seconden branden voor dat hij begint te knipperen.</p>"},{"location":"arduino/2_power/","title":"Power","text":"<p>De pins van Power kan je gebruiken om bijvoorbeeld een sensor van stroom te voorzien.</p> <p></p> Pin Beschrijving <code>3.3V</code> + van 3.3V spanning. <code>5V</code> + van 5V spanning. <code>GND</code> gemeenschappelijke grond (universele - ). Zelfde als 0V. <code>GND</code> gemeenschappelijke grond (universele - ). Zelfde als 0V. <code>Vin</code> + van spanning gelijk aan voedings spanning (nog niet nodig). Oefening 1: Led branden <p>Gebruik de interne spanning van de arduino om een LED te laten branden.</p> <p>Opgave: Maak de juiste elektrische kring zodat je een let kan doen branden met de arduino Power pins. Let op! Anode moet aan de + pool, Kathode aan de - pool. Gebruik eventueel een weerstand indien nodig.</p>"},{"location":"arduino/3_digital_output/","title":"Digitale output","text":"<p>In dit stuk ga je zien hoe je de digitale output kan gebruiken. Dit wil zeggen dat we de pin als 'output' gaan gebruiken.</p> <p></p> Pin Beschrijving Input Output <code>0... 13</code> Kan werken als digitale input of output. Meet of er spanning (&gt;2.5V) of geen spanning (&lt;2.5V) is. Kan 'HOOG' (+5V) of 'LAAG' (+0V) zijn. <code>GND</code> gemeenschappelijke grond (universele - ). Zelfde als 0V. (zelfde als bij POWER)"},{"location":"arduino/3_digital_output/#elektrische-schakeling","title":"Elektrische schakeling","text":"<p>Bij HOOG zal de pin +5V zijn, bij LAAG zal de pin 0V zijn. Om te zorgen dat er een stroom is als de pin HOOG staat, moeten we zorgen dat er een elektrische kring is. Dit wil zeggen dat we een + moeten hebben (de pin), en een - (de grond).</p> <p>Je moet dus altijd zorgen dat er een gesloten kring is. </p> <p>Onderstaand voorbeeld laat zien hoe je de schakeling kan maken om een LED te laten branden met pin 9.</p> <p></p> <p>Warning</p> <p>Let er op dat de maximale stroom die een digitale output kan leveren 40mA is. Dit is genoeg om 2 LED lampjes te laten branden, maar niet om bijvoorbeeld een motor te laten draaien. Om een grote verbruiker aan of uit te zetten zal je gebruik moeten maken van transistoren.</p>"},{"location":"arduino/3_digital_output/#code","title":"Code","text":"<p>Om te programmeren wanneer de pin 'HOOG' of LAAG moet zijn, kan je gebruiken maken van het blokje <code>pin 0 instellen op HOOG</code>.</p> <p></p> <p>Onderstaande programma zal bijvoorbeeld:</p> <ul> <li>Pin 9 hoog zetten. Hierdoor stroomt er een stroom van pin 9 via de weerstand en de LED naar de grond.</li> <li>1 seconde wachten. Pin 9 blijft dus hoog en de lamp blijft 1 seconde lang branden.</li> <li>pin 9 laag zetten. Hierdoor stroomt er geen stroom meer door de LED en zal deze uitgaan.</li> <li>1 seconde wachten. Pin 9 blijft dus laag en de lampg brand 1 seconde niet.</li> </ul> <p>Omdat alle 4 de stappen in een 'voor altijd' lus zitten, zal het resultaat een knipperende LED zijn.</p> <p></p> Oefening 1: Verkeerslicht <p>Maak zelf een verkeerslicht. </p> <p>Opgave: Laat eerst 4 seconden een rode led branden. Daarna 1 seconde een orange led. Tenslotte 4 seconden een groene LED. Zet alles in een lus zodat het verkeerslicht zich herhaalt (zoals een echt verkeerslicht).  </p> <p>Schakeling: De weerstanden zijn elk 500 \\(\\Omega\\). </p> Oefening 2: Morse <p>Laat een ledje branden dat SOS uitstuurt in Morse code. </p> <p>Opgave: Voor SOS moet je eerste 3 keer kort knipperen (1 seconde aan, 1 seconde uit), vervolgens 3 seconden lang (3 seconden aan, 1 seconde uit) en tenslotte terug 3 keer kort. Maak zelf een schakeling.</p> <p></p>"},{"location":"arduino/4_analog_input/","title":"Analog In","text":"<p>De analoge inputs laten je toe om de spanning te meten tussen 0V en 5V in stapjes van 0.005V.</p> <p></p> Pin Beschrijving <code>A0</code> Analoge input 0. Meet spanning in stapjes 0.005V van tussen 0V en 5V. <code>A1</code> Analoge input 1. Meet spanning in stapjes 0.005V van tussen 0V en 5V. <code>A2</code> Analoge input 2. Meet spanning in stapjes 0.005V van tussen 0V en 5V. <code>A3</code> Analoge input 3. Meet spanning in stapjes 0.005V van tussen 0V en 5V. <code>A4</code> Analoge input 4. Meet spanning in stapjes 0.005V van tussen 0V en 5V. <code>A5</code> Analoge input 5. Meet spanning in stapjes 0.005V van tussen 0V en 5V."},{"location":"arduino/4_analog_input/#waarom","title":"Waarom?","text":"<p>Het kan handig zijn om de spanning te meten omdat we hieruit de weerstand kunnen bepalen. Neem bijvoorbeeld volgende kring</p> <p></p> <p>De spanning op punt A1 zal afhankelijk zijn van hoe groot de weerstand R1 is. De elektronen verliezen namelijk potentiele energie als ze door de weerstand gaan. Ze beginnen altijd met 5V maar na de weerstand hebbben ze bijvoorbeeld nog maar 4V. Na de tweede weerstand zullen ze altijd 0V hebben.</p> <p>Het kunnen bepalen van hoe groot een weerstand is is interessant omdat er sensoren bestaan waarbij de weerstand afhankelijk is van de lichtintensiteit, de temperatuur, de druk, de positie of de kracht.</p>"},{"location":"arduino/4_analog_input/#analoog-naar-digitaal","title":"Analoog naar digitaal","text":"<p>Het voltage A1 zal een analoog signaal zijn, namelijk een willeukrige spanning tussen 0 en 5V. Bijvoorbeel 3.34V zou de werkelijke spanning kunnen zijn. Om deze spanning echter om te zetten in computer code moet de arduino hier binair getal van maken. Aangezien de analoge input 10 bits gebruikt, zal de maximale waarde 1111 1111 of 1023 zijn. Een input van 5V zal dus waarde 1023 krijgen, een input van 0V een waarde 0. Alle waarden tussen 5V en 0V zullen lineair geinterpoleerd worden. Extra info tussen analoog en digitaal vind je in volgende video: https://youtu.be/zkhMy6piwt4?si=L8XUVbadMLv4TvXe.</p>"},{"location":"arduino/4_analog_input/#variabele-weerstanden","title":"Variabele weerstanden","text":""},{"location":"arduino/4_analog_input/#potentiometer","title":"Potentiometer","text":"<p>Onderstaande figuur geeft een potentiometer mee. Bij een potentiometer kan je op de 'Signaal' pin meten hoeveel van de oorspronkelijke spanning (aangebracht op 'Voeding') nog over is. Als de Loper helemaal naar rechts staat, zal alle spanning nog aanwezig zijn. Als de Loper helemaal links is zal alle spanning opgebruikt zijn en meten we 0 Volt (zelfde als Massa of Grond). Als de loper halverwege staat meten we 2.5V, aangezien de stroom reeds door een stuk weerstand van de Koolstofbaan moest. </p> <p>Afbeelding genomen van https://www.mvwautotechniek.nl/potentiometer/</p> <p></p> <p>Warning</p> <p>Onthoud, het Signaal zal door de Analog to Digital converter omgezet worden naar een getal tussen 0 (0V) en 1023 (5V).</p>"},{"location":"arduino/4_analog_input/#lichtweerstand","title":"Lichtweerstand","text":""},{"location":"arduino/4_analog_input/#temperatuur-weerstand","title":"Temperatuur weerstand","text":""},{"location":"arduino/4_analog_input/#code","title":"Code","text":"<p>Om te meten hoeveel spanning er op de analoge pin is, kan je gebruik maken van het blokje <code>analoge pin lezen</code></p> <p></p> <p>Om te vermijden dat je meerdere keren deze waarde moet lezen, kan je 1x een variabele aanmaken (bvb meetwaarde, en deze variabele dan later elke keer opnieuw gebruiken). Ga hiervoor naar Variabelen en klik op Variabele maken ....</p> <p>Je kan nu de blok <code>Meetwaarde instellen op</code> om de meetwaarde eenmalig in te stellen op de analoge input. Vanaf dan kan je de variabele zelf gebruiken.</p> <p></p> <p>In volgend voorbeeld wordt geillustreed hoe je met deze functies:</p> <ol> <li>De waarden van de potentiometer kan printen in de 'Seri\u00eble Monitor'</li> <li>De interne LED kan aanzetten vanaf de potentiometer over halfweg zet.</li> </ol> wiringcode <p></p> <p></p> Oefening 1: Volumeknop <p>Maak een volumeknop die meer lampjes doet branden naarmate je verder gaat.</p> <p>Schakeling: De weerstanden zijn elk 500 \\(\\Omega\\). </p> Oefening 2: Regelbaar maximum <p>Zorg voor een regelbaar maximum op de volumeknop. Herhaal oefening 1 maar voeg een tweede draaiknop toe waarop je een maximum kan instellen. Dit wil zeggen dat je als je de volumeknop voorbij het maximum draait, er geen extra lampjes gaan branden. </p>"},{"location":"arduino/5_digital_input/","title":"5 digital input","text":""},{"location":"arduino/5_digital_input/#digital-io","title":"Digital IO","text":"Pin Beschrijving Input Output <code>0... 13</code> Kan werken als digitale input of output. Meet of er spanning (&gt;2.5V) of geen spanning (&lt;2.5V) is. Kan 'HOOG' (+5V) of 'LAAG' (+0V) zijn. <code>GND</code> gemeenschappelijke grond (universele - ). Zelfde als 0V. (zelfde als bij POWER)"},{"location":"elektrische_kring/1_elektrische_kring/","title":"1. Elektrische kring","text":"<p>In dit stuk worden enkele basisbegrippen herhaald van een elektrische kring. Hierbij zijn vooral de woorden stroom, potentiaal en weerstand belangrijk.</p> <p>We gaan deze woorden kort illusteren aan de hand van een loper die een loopwedstrijd loopt. </p>"},{"location":"elektrische_kring/1_elektrische_kring/#stroom","title":"Stroom","text":"<p>De loper start altijd aan de start en eindigt aan de finish. Het parcour dat de loper aflegt noemen we de stroom. Hoe sneller de loper, hoe meer stroom. </p> <p></p> <p>Note</p> <p>In elektriciteit spreken we af dat we de start de '+' noemen, en de finish de '-'. De stroom zal dus altijd van + naar - gaan.</p>"},{"location":"elektrische_kring/1_elektrische_kring/#potentiaal","title":"Potentiaal","text":"<p>Er zijn verschillende soorten lopers. Sommige lopers zijn goed getraind en starten met veel energie aan de finish. Andere lopers zijn minder goed getrained en starten met minder. We geven de potentiele energie weer in 'Volts'. Een loper met 5V energie zal dus minder snel een zelde ronde lopen als een loper met 9V.</p> <p> </p> <p>Aan de finish zal elke loper volledig leeg gelopen zijn en geen energie meer over hebben. Het verschil is dat een goede loper sneller zal lopen dan een minder goede loper.</p>"},{"location":"elektrische_kring/1_elektrische_kring/#weerstand","title":"Weerstand","text":"<p>Onderweg kunnen er hindernissen zijn zoals een bergje waar de loper over moet. Dit noemen we de weerstand. Een loper die over een hoge berg moet gaat natuurlijk minder snel lopen dan een loper die lage berg moet. Een grote weerstand zorgt dus voor een kleine stroom.</p> <p>In de wereld van elektriciteit duiden we de hoogte van de weerstand in Ohm (\\(\\Omega\\)). De stroom door een weerstand van 100 \\(\\Omega\\) is dus kleiner dan die door 10 \\(\\Omega\\).</p> <p> </p> <p>Warning</p> <p>Omdat de loper altijd alle energie moet opdoen voor de finish, kan het zijn dat als je een heel goede loper hebt, maar geen weerstand, dat deze zo snel loopt dat hij vuur vat! Dit is wat we een kortsluiting noemen.</p>"},{"location":"elektrische_kring/2_elektrische_schakeling/","title":"2. Elektrische schakeling","text":"<p>In dit hoofdstuk ga je leren hoe je een LED lamp laat branden in Tinkercad.</p> <p>Er zijn 3 elementen die je nodig hebt om een lamp te laten branden.</p> <ol> <li>Een batterij</li> <li>Een led lamp</li> <li>Een weerstand</li> </ol>"},{"location":"elektrische_kring/2_elektrische_schakeling/#batterij","title":"Batterij","text":"<p>Je hebt verschillende soorten batterijen, die elk een ander voltage leveren. Je zou kunnen zeggen dat deze batterijen lopers afleveren die ofwel zeer sportief zijn (9V), of juist niet zo sportief (1.5V). </p> <p>Let er op dat de batterijen altijd een + en een - pool hebben. De stroom loopt altijd volgens een gesloten circuit van + naar -. Je moet dus zowel een start als finish hebben!</p> <p> </p>"},{"location":"elektrische_kring/2_elektrische_schakeling/#led","title":"Led","text":"<p>Een led is een speciaal element. Het geeft ligt maar alleen als de stroom er op de juiste manier doorstroomt. De stroom moet altijd van de anode naar de kathode gaan! Klik op de beendjes van de LED om te zien wat de anode en de kathode is.</p> <p>Hoe meer stroom er door de LED stroomt, hoe feller de LED zal branden. Maar let op! Als er te veel stroom door de LED gaat, zal deze doorbranden!</p> <p></p> Info <p>Je kan de kleur van de led veranderen door er op te klikken en dan een andere kleur te selecteren. </p>"},{"location":"elektrische_kring/2_elektrische_schakeling/#weerstand","title":"Weerstand","text":"<p>Om te zorgen dat de stroom door de LED niet te hoog is, kunnen we een weerstand toevoegen aan onze kring. </p> <p></p> Info <p>Je kan de grootte van de weertand (in \\(\\Omega\\)) aanpassen door er op te klikken. </p> <p>Example</p> <p>Probeer nu zelf! Laat een LED lamp branden met behulp van de 9V batterij. </p> <ul> <li>Wat is de ideale weerstand zodat je veel licht hebt maar de lamp niet doorbrandt?</li> <li>Kan je de kleur van de led veranderen? </li> <li>Ken je meerdere LED's laten branden met 1 batterij?</li> </ul>"},{"location":"elektrische_kring/3_elektrische_kring_symbolen/","title":"Elektrische kring symbolen","text":"<p>We kunnen een elektrische kring ook voorstellen met symbolen. Hieronder is het schema gegeven voor een schakeling met een batterij en een weerstand. De stroom door deze schakeling zal 3mA zijn.</p> <p> </p> <p>Warning</p> <p>De stroom gaat altijd van + naar -. Bij een batterij is + het grote streepje en - het kleine dikke streepje.</p>"},{"location":"elektrische_kring/3_elektrische_kring_symbolen/#symbolen","title":"Symbolen","text":"<p>Op deze website vind je een lijst met alle sybmolen. Zoek zelf of de symbolen voor een batterij, een LED en weerstand terugvind.</p> Oefening met twee LED's <p>Maak volgende schakeling in TinkerCad. Zie je een verschil tussen de twee LEDs? </p>"},{"location":"scratch/3bt/","title":"3bt","text":"<p>Anesa: Start de vis door op a te duwen, navigeer de haai met de pijltjes.</p> <p>Gizem: Een kleurijke zee met pratend dieren.</p> <p>Mariam: Probeer met de vos tot bij het konijn te geraken door de pijltjes te gebruiken.</p> <p>Erdem: Gebruik de pijltjes om de vis te besturen, en de qszd om de duiker te besturen.</p> <p>Badr: Vang de vis met de duiker. Let op, de vis gaat snel en je moet lang genoeg op de vis blijven staan!</p> <p>Muhammed: Gebruik de pijltjes om met de leeuw op de zebra te jagen.</p> <p>Soulayman: De haai ziet er wat droevig uit, misschien wordt hij gelukkiger als hij visjes eet.</p> <p>Aya: Gebruik de pijltjes om omhoog en omlaag om de haai te draaien, gebruik het pijtlje rechts om naar voor te gaan.</p>"}]}